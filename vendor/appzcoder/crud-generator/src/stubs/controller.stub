<?php

namespace DummyNamespace;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\{{modelNamespace}}{{modelName}};


class DummyClass extends Controller
{

    //routeGroup: {{routeGroup}}
    //viewName:   {{viewName}}
    //crudName:   {{crudName}}
    //crudNameSingular: {{crudNameSingular}}
    //fileSnippet: {{fileSnippet}}

    /*
    |--------------------------------------------------------------------------
    | VIEW
    |--------------------------------------------------------------------------
    */

    public function index(Request $request)
    {   
        $name = $request->get('name');

        if(isset($name)){
            ${{crudName}} = {{modelName}}::searchname($name)->orderBy('id', 'ASC')->paginate(15); 
        } else {
            ${{crudName}} = {{modelName}}::orderBy('id','ASC')->paginate(15);
        }

        return view('{{viewPath}}.{{viewName}}index')->with('{{crudName}}', ${{crudName}});
    
    }

    public function show($id)
    {
        $item = {{modelName}}::findOrFail($id);
        return view('{{viewPath}}{{viewName}}.show', compact('item'));
    }

    /*
    |--------------------------------------------------------------------------
    | CREATE
    |--------------------------------------------------------------------------
    */

    public function create()
    {
        return view('{{viewPath}}{{viewName}}.create');
    }

    public function store(Request $request)
    {

        $this->validate($request,[
            'name'          => 'required|min:4|max:250|unique:TABLE-NAME',
        ],[
            'name.required' => 'Debe ingresar un nombre',
            'name.unique'   => 'El item ya existe',
        ]);

        $item = new {{modelName}}($request->all());
        $item->save();

        return redirect()->route('{{routeGroup}}{{viewName}}')->with('message','Item Creado');

    }

    /*
    |--------------------------------------------------------------------------
    | UPDATE
    |--------------------------------------------------------------------------
    */

    public function edit($id)
    {
        $item = {{modelName}}::findOrFail($id);
        return view('{{viewPath}}{{viewName}}.edit', compact('item'));
    }

    public function update($id, Request $request)
    {
        $item = {{modelName}}::find($id);

        $this->validate($request,[
            'name'          => 'required|unique:TABLE-NAME,name,'.$item->id,
        ],[
            'name.required' => 'Debe ingresar un nombre',
            'name.unique'   => 'El item ya existe'
        ]);
        
        $item->fill($request->all());
        $item->save();

        return redirect()->route('{{routeGroup}}{{viewName}}')->with('message','Item Editada');
    }

    /*
    |--------------------------------------------------------------------------
    | DESTROY
    |--------------------------------------------------------------------------
    */

    public function destroy(Request $request)
    {   
        
        $ids = json_decode('['.str_replace("'",'"',$request->id).']', true);
        
        if(is_array($ids)) {
            try {
                foreach ($ids as $id) {
                    $record = {{modelName}}::find($id);
                    $record->delete();
                }
                return response()->json([
                    'success'   => true,
                ]); 
            }  catch (Exception $e) {
                return response()->json([
                    'success'   => false,
                    'error'    => 'Error: '.$e
                ]);    
            }
        } else {
            try {
                $record = {{modelName}}::find($id);
                $record->delete();
                    return response()->json([
                        'success'   => true,
                    ]);  
                    
                } catch (Exception $e) {
                    return response()->json([
                        'success'   => false,
                        'error'    => 'Error: '.$e
                    ]);    
                }
        }
    }

}
